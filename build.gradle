buildscript {
    repositories {
		mavenCentral()
        jcenter()
        maven {
            name 'forge'
            url 'http://files.minecraftforge.net/maven/'
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:' + project.forgeGradleVersion
        classpath 'org.spongepowered:mixingradle:' + project.mixinGradleVersion
    }
}
apply plugin: 'net.minecraftforge.gradle.liteloader'
apply plugin: 'org.spongepowered.mixin'

def ver = "${project.mcVersion}.${project.buildVersion}-${project.buildType}"

version = ver
group = project.group
description = project.name

minecraft {
    version = project.mcVersion
    mappings = project.mcMappings
    runDir = 'run'
    replace '@MODID', project.modid
    replace '@NAME@', project.name
    replace '@AUTHOR@', project.author
	replace '@VERSION@', ver
	replace '@DESCRIPTION@', project.description
}

mixin {
    defaultObfuscationEnv notch
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	maven {
		name = 'sponge'
		url = 'http://repo.spongepowered.org/maven'
	}
	maven {
		name = 'spigot'
		url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
	}
	maven {
		name = 'sonatype'
		url = 'https://oss.sonatype.org/content/groups/public/'
	}
}

dependencies {
	compile 'com.google.code.findbugs:jsr305:3.0.1'
}

sourceSets {
	common {
		compileClasspath += main.compileClasspath
	}
	sponge {
		dependencies {
			compile 'org.spongepowered:spongeapi:7.0.0-SNAPSHOT'
			runtime('org.spongepowered:spongevanilla:1.12.1-7.0.0-BETA-320')
		}
		
		compileClasspath += main.compileClasspath
		compileClasspath += common.output
	}
	bukkit {
		dependencies {
			compileOnly 'org.bukkit:bukkit:1.12-R0.1-SNAPSHOT'
		}
		
		compileClasspath += main.compileClasspath
		compileClasspath += common.output
	}
	forge {
		dependencies {
		//	compileOnly 'net.minecraftforge:forge:1.12.2-14.23.2.2654'
		}
		compileClasspath += main.compileClasspath
		compileClasspath += common.output
	}
    client {
    	compileClasspath += main.compileClasspath
		compileClasspath += common.output
    }
    main {
    	
    }
}

processResources{
    def props = [
    	modid: project.modid,
    	name: project.name,
    	description: project.description,
        version: ver,
        revision: project.buildRevision,
        mcversion: project.mcVersion,
        author: project.author
    ]
    inputs.properties props
    
    from(sourceSets.client.resources.srcDirs) {
        include 'mcmod.info'
        
        expand props
    }
    from(sourceSets.forge.resources.srcDirs) {
        include 'mcmod.info'
        
        expand props
    }
    
    // copy everything else
    from(sourceSets.client.resources.srcDirs) {
        exclude 'litemod.json'
    }
    from(sourceSets.forge.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
	from sourceSets.common.output
	from sourceSets.bukkit.output
	from sourceSets.forge.output
	from sourceSets.sponge.output
	classifier 'server'
	extension 'jar'
}

jar {
	from sourceSets.common.output
	from sourceSets.client.output
	from sourceSets.forge.output
	classifier 'client'
	extension 'jar'
}